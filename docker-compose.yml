version: "3.8"
services:
  nginx:
    build:
      context: .
      dockerfile: nginx/nginx.dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    networks:
      - internal

  php:
    build:
      context: .
      dockerfile: php/php.dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-php
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - internal

  mysql:
    image: mysql:8.0
    container_name: ${COMPOSE_PROJECT_NAME}-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=$MYSQL_DATABASE
      - MYSQL_USER=$MYSQL_USER
      - MYSQL_PASSWORD=$MYSQL_PASSWORD
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
    networks:
      - internal

  redis:
    image: redis:alpine
    container_name: ${COMPOSE_PROJECT_NAME}-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - internal

  npm:
    image: node:16-alpine
    container_name: ${COMPOSE_PROJECT_NAME}-npm
    volumes:
      - ./src:/var/www/html:delegated
    ports:
      - "3000:3000"
      - "3001:3001"
    working_dir: /var/www/html
    entrypoint: [ "npm" ]
    networks:
      - internal

  composer:
    image: composer:2
    container_name: ${COMPOSE_PROJECT_NAME}-composer
    volumes:
      - ./src:/var/www/html:delegated
    working_dir: /var/www/html
    depends_on:
      - php
    entrypoint: [ "composer" ]
    networks:
      - internal

  artisan:
    build:
      context: .
      dockerfile: php/php.dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-artisan
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: [ "php", "/var/www/html/artisan" ]
    networks:
      - internal

  mailhog:
    image: mailhog/mailhog:latest
    container_name: ${COMPOSE_PROJECT_NAME}-mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - internal

volumes:
  mysql:
    driver: local

networks:
  internal:
    driver: bridge